/*!
 * # Semantic UI - Label
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */


/*******************************
            Theme
*******************************/

@type : 'element';
@element : 'label';

@import (multiple) '../../theme.config';

/*******************************
            Label
*******************************/

.ui.label {
  display: inline-block;
  line-height: 1;
  vertical-align: @verticalAlign;

  margin: @verticalMargin @horizontalMargin;

  background-color: var(--tag-default-background-color, @backgroundColor);
  background-image: var(--label-background-image, @backgroundImage);
  padding: @verticalPadding @horizontalPadding;
  color: var(--tag-default-text-color, @color);

  text-transform: @textTransform;
  font-weight: var(--label-font-weight, @fontWeight);

  border: var(--label-border);
  border-color: var(--tag-default-border-color, @border);
  border-radius: var(--label-border-radius, @borderRadius);
  transition: @transition;
}

.ui.label:first-child {
  margin-left: 0em;
}

.ui.label:last-child {
  margin-right: 0em;
}

/* Link */
a.ui.label {
  cursor: pointer;
}

/* Inside Link */
.ui.label>a {
  cursor: pointer;
  color: inherit;
  opacity: @linkOpacity;
  transition: @linkTransition;
}

.ui.label>a:hover {
  opacity: 1;
}

/* Image */
.ui.label>img {
  width: auto !important;
  vertical-align: middle;
  height: @imageHeight !important;
}

/* Icon */
.ui.label>.icon {
  width: auto;
  margin: 0em @iconDistance 0em 0em;
}

/* Detail */
.ui.label>.detail {
  display: inline-block;
  vertical-align: top;
  font-weight: @detailFontWeight;
  margin-left: @detailMargin;
  opacity: @detailOpacity;
}

.ui.label>.detail .icon {
  margin: 0em @detailIconDistance 0em 0em;
}


/* Removable label */
.ui.label>.close.icon,
.ui.label>.delete.icon {
  cursor: pointer;
  margin-right: 0em;
  margin-left: @deleteMargin;
  font-size: @deleteSize;
  opacity: @deleteOpacity;
  transition: @deleteTransition;
}

.ui.label>.delete.icon:hover {
  opacity: 1;
}

/*-------------------
       Group
--------------------*/

.ui.labels>.label {
  margin: 0em @groupHorizontalMargin @groupVerticalMargin 0em;
}


/*-------------------
       Coupling
--------------------*/

.ui.header>.ui.label {
  margin-top: @lineHeightOffset;
}


/* Remove border radius on attached segment */
.ui.attached.segment>.ui.top.left.attached.label,
.ui.bottom.attached.segment>.ui.top.left.attached.label {
  border-top-left-radius: 0;
}

.ui.attached.segment>.ui.top.right.attached.label,
.ui.bottom.attached.segment>.ui.top.right.attached.label {
  border-top-right-radius: 0;
}

.ui.top.attached.segment>.ui.bottom.left.attached.label {
  border-bottom-left-radius: 0;
}

.ui.top.attached.segment>.ui.bottom.right.attached.label {
  border-bottom-right-radius: 0;
}

/* Padding on next content after a label */
.ui.top.attached.label:first-child+ :not(.attached),
.ui.top.attached.label+[class*="right floated"]+* {
  margin-top: @attachedSegmentPadding !important;
}

.ui.bottom.attached.label:first-child~ :last-child:not(.attached) {
  margin-top: 0em;
  margin-bottom: @attachedSegmentPadding !important;
}


/*******************************
             Types
*******************************/

/*-------------------
      Attached
--------------------*/

.ui[class*="top attached"].label,
.ui.attached.label {
  width: 100%;
  position: absolute;
  margin: 0em;
  top: 0em;
  left: 0em;

  padding: @attachedVerticalPadding @attachedHorizontalPadding;

  border-radius: @attachedCornerBorderRadius @attachedCornerBorderRadius 0em 0em;
}

.ui[class*="bottom attached"].label {
  top: auto;
  bottom: 0em;
  border-radius: 0em 0em @attachedCornerBorderRadius @attachedCornerBorderRadius;
}

.ui[class*="top left attached"].label {
  width: auto;
  margin-top: 0em !important;
  border-radius: @attachedCornerBorderRadius 0em @attachedBorderRadius 0em;
}

.ui[class*="top right attached"].label {
  width: auto;
  left: auto;
  right: 0em;
  border-radius: 0em @attachedCornerBorderRadius 0em @attachedBorderRadius;
}

.ui[class*="bottom left attached"].label {
  width: auto;
  top: auto;
  bottom: 0em;
  border-radius: 0em @attachedBorderRadius 0em @attachedCornerBorderRadius;
}

.ui[class*="bottom right attached"].label {
  top: auto;
  bottom: 0em;
  left: auto;
  right: 0em;
  width: auto;
  border-radius: @attachedBorderRadius 0em @attachedCornerBorderRadius 0em;
}


/*******************************
             States
*******************************/

/*-------------------
      Disabled
--------------------*/

.ui.label.disabled {
  opacity: 0.5;
}

/*-------------------
        Hover
--------------------*/

a.ui.labels .label:hover,
a.ui.label:hover {
  background-color: var(--label-hover-background-color, @labelHoverBackgroundColor);
  border-color: var(--label-hover-background-color, @labelHoverBackgroundColor);

  background-image: var(--label-hover-background-image, @labelHoverBackgroundImage);
  color: var(--label-hover-text-color, @labelHoverTextColor);
}

.ui.labels a.label:hover:before,
a.ui.label:hover:before {
  color: var(--label-hover-text-color, @labelHoverTextColor);
}

/*-------------------
        Active
--------------------*/

.ui.active.label {
  background-color: var(--tag-default-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-default-active-border-color, transparent);

  background-image: var(--label-active-background-image, @labelActiveBackgroundImage);
  color: var(--tag-default-active-text-color, @labelActiveTextColor);
}

.ui.active.label:before {
  background-color: var(--tag-default-active-background-color, @labelActiveBackgroundColor);
  background-image: var(--label-active-background-image, @labelActiveBackgroundImage);
  color: var(--tag-default-active-text-color, @labelActiveTextColor);
}

/*-------------------
     Active Hover
--------------------*/

a.ui.labels .active.label:hover,
a.ui.active.label:hover {
  background-color: var(--label-active-hover-background-color, @labelActiveHoverBackgroundColor);
  border-color: var(--label-active-hover-background-color, @labelActiveHoverBackgroundColor);

  background-image: var(--label-active-hover-background-image, @labelActiveHoverBackgroundImage);
  color: var(--label-active-hover-text-color, @labelActiveHoverTextColor);
}

.ui.labels a.active.label:hover:before,
a.ui.active.label:hover:before {
  background-color: var(--label-active-hover-background-color, @labelActiveHoverBackgroundColor);
  background-image: var(--label-active-hover-background-image, @labelActiveHoverBackgroundImage);
  color: var(--label-active-hover-text-color, @labelActiveHoverTextColor);
}

/*-------------------
      Visible
--------------------*/

.ui.labels.visible .label,
.ui.label.visible:not(.dropdown) {
  display: inline-block !important;
}

/*-------------------
      Hidden
--------------------*/

.ui.labels.hidden .label,
.ui.label.hidden {
  display: none !important;
}


/*******************************
           Variations
*******************************/


/*-------------------
       Colors
--------------------*/

/*--- Red ---*/
.ui.red.labels .label,
.ui.red.label {
  --label-border-color: var(--tag-red-border-color);
  background-color: var(--tag-red-background-color, @red) !important;
  border-color: var(--tag-red-border-color, @red) !important;
  color: var(--tag-red-text-color, @redTextColor) !important;
}
.ui.red.active,labels .label,
.ui.red.active.label {
  background-color: var(--tag-red-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-red-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-red-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.red.labels .label:hover,
a.ui.red.label:hover {
  background-color: var(--label-red-hover-background-color, @redHover) !important;
  border-color: var(--label-red-hover-border-color, @redHover) !important;
  color: var(--label-red-hover-text-color, @redHoverTextColor) !important;
}

/* Corner */
.ui.red.corner.label,
.ui.red.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.red.ribbon.label {
  border-color: var(--label-red-ribbon-shadow, @redRibbonShadow) !important;
}

/* Basic */
.ui.basic.red.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-red-color, @red) !important;
  border-color: var(--tag-red-border-color, @red) !important;
}

.ui.basic.red.labels a.label:hover,
a.ui.basic.red.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-red-hover-color, @redHover) !important;
  border-color: var(--label-red-hover-border-color, @redHover) !important;
}

/*--- Orange ---*/
.ui.orange.labels .label,
.ui.orange.label {
  --label-border-color: var(--tag-orange-border-color);
  background-color: var(--tag-orange-background-color, @orange) !important;
  border-color: var(--tag-orange-border-color, @orange) !important;
  color: var(--tag-orange-text-color, @orangeTextColor) !important;
}
.ui.orange.active,labels .label,
.ui.orange.active.label {
  background-color: var(--tag-orange-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-orange-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-orange-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.orange.labels .label:hover,
a.ui.orange.label:hover {
  background-color: var(--label-orange-hover-background-color, @orangeHover) !important;
  border-color: var(--label-orange-hover-border-color, @orangeHover) !important;
  color: var(--label-orange-hover-text-color, @orangeHoverTextColor) !important;
}

/* Corner */
.ui.orange.corner.label,
.ui.orange.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.orange.ribbon.label {
  border-color: var(--label-orange-ribbon-shadow, @orangeRibbonShadow) !important;
}

/* Basic */
.ui.basic.orange.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-orange-color, @orange) !important;
  border-color: var(--tag-orange-border-color, @orange) !important;
}

.ui.basic.orange.labels a.label:hover,
a.ui.basic.orange.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-orange-hover-color, @orangeHover) !important;
  border-color: var(--label-orange-hover-border-color, @orangeHover) !important;
}

/*--- Yellow ---*/
.ui.yellow.labels .label,
.ui.yellow.label {
  --label-border-color: var(--tag-yellow-border-color);
  background-color: var(--tag-yellow-background-color, @yellow) !important;
  border-color: var(--tag-yellow-border-color, @yellow) !important;
  color: var(--tag-yellow-text-color, @yellowTextColor) !important;
}
.ui.yellow.active,labels .label,
.ui.yellow.active.label {
  background-color: var(--tag-yellow-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-yellow-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-yellow-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.yellow.labels .label:hover,
a.ui.yellow.label:hover {
  background-color: var(--label-yellow-hover-background-color, @yellowHover) !important;
  border-color: var(--label-yellow-hover-border-color, @yellowHover) !important;
  color: var(--label-yellow-hover-text-color, @yellowHoverTextColor) !important;
}

/* Corner */
.ui.yellow.corner.label,
.ui.yellow.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.yellow.ribbon.label {
  border-color: var(--label-yellow-ribbon-shadow, @yellowRibbonShadow) !important;
}

/* Basic */
.ui.basic.yellow.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-yellow-color, @yellow) !important;
  border-color: var(--tag-yellow-border-color, @yellow) !important;
}

.ui.basic.yellow.labels a.label:hover,
a.ui.basic.yellow.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-yellow-hover-color, @yellowHover) !important;
  border-color: var(--label-yellow-hover-border-color, @yellowHover) !important;
}

/*--- Olive ---*/
.ui.olive.labels .label,
.ui.olive.label {
  --label-border-color: var(--tag-olive-border-color);
  background-color: var(--tag-olive-background-color, @olive) !important;
  border-color: var(--tag-olive-border-color, @olive) !important;
  color: var(--tag-olive-text-color, @oliveTextColor) !important;
}
.ui.olive.active,labels .label,
.ui.olive.active.label {
  background-color: var(--tag-olive-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-olive-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-olive-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.olive.labels .label:hover,
a.ui.olive.label:hover {
  background-color: var(--label-olive-hover-background-color, @oliveHover) !important;
  border-color: var(--label-olive-hover-border-color, @oliveHover) !important;
  color: var(--label-olive-hover-text-color, @oliveHoverTextColor) !important;
}

/* Corner */
.ui.olive.corner.label,
.ui.olive.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.olive.ribbon.label {
  border-color: var(--label-green-ribbon-shadow, @greenRibbonShadow) !important;
}

/* Basic */
.ui.basic.olive.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-olive-color, @olive) !important;
  border-color: var(--tag-olive-border-color, @olive) !important;
}

.ui.basic.olive.labels a.label:hover,
a.ui.basic.olive.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-olive-hover-color, @oliveHover) !important;
  border-color: var(--label-olive-hover-border-color, @oliveHover) !important;
}

/*--- Green ---*/
.ui.green.labels .label,
.ui.green.label {
  --label-border-color: var(--tag-green-border-color);
  background-color: var(--tag-green-background-color, @green) !important;
  border-color: var(--tag-green-border-color, @green) !important;
  color: var(--tag-green-text-color, @greenTextColor) !important;
}
.ui.green.active,labels .label,
.ui.green.active.label {
  background-color: var(--tag-green-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-green-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-green-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.green.labels .label:hover,
a.ui.green.label:hover {
  background-color: var(--label-green-hover-background-color, @greenHover) !important;
  border-color: var(--label-green-hover-border-color, @greenHover) !important;
  color: var(--label-green-hover-text-color, @greenHoverTextColor) !important;
}

/* Corner */
.ui.green.corner.label,
.ui.green.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.green.ribbon.label {
  border-color: var(--label-green-ribbon-shadow, @greenRibbonShadow) !important;
}

/* Basic */
.ui.basic.green.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-green-color, @green) !important;
  border-color: var(--tag-green-border-color, @green) !important;
}

.ui.basic.green.labels a.label:hover,
a.ui.basic.green.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-green-hover-color, @greenHover) !important;
  border-color: var(--label-green-hover-border-color, @greenHover) !important;
}

/*--- Teal ---*/
.ui.teal.labels .label,
.ui.teal.label {
  --label-border-color: var(--tag-teal-border-color);
  background-color: var(--tag-teal-background-color, @teal) !important;
  border-color: var(--tag-teal-border-color, @teal) !important;
  color: var(--tag-teal-text-color, @tealTextColor) !important;
}
.ui.teal.active,labels .label,
.ui.teal.active.label {
  background-color: var(--tag-teal-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-teal-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-teal-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.teal.labels .label:hover,
a.ui.teal.label:hover {
  background-color: var(--label-teal-hover-background-color, @tealHover) !important;
  border-color: var(--label-teal-hover-border-color, @tealHover) !important;
  color: var(--label-teal-hover-text-color, @tealHoverTextColor) !important;
}

/* Corner */
.ui.teal.corner.label,
.ui.teal.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.teal.ribbon.label {
  border-color: var(--label-teal-ribbon-shadow, @tealRibbonShadow) !important;
}

/* Basic */
.ui.basic.teal.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-teal-color, @teal) !important;
  border-color: var(--tag-teal-border-color, @teal) !important;
}

.ui.basic.teal.labels a.label:hover,
a.ui.basic.teal.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-teal-hover-color, @tealHover) !important;
  border-color: var(--label-teal-hover-border-color, @tealHover) !important;
}

/*--- Blue ---*/
.ui.blue.labels .label,
.ui.blue.label {
  --label-border-color: var(--tag-blue-border-color);
  background-color: var(--tag-blue-background-color, @blue) !important;
  border-color: var(--tag-blue-border-color, @blue) !important;
  color: var(--tag-blue-text-color, @blueTextColor) !important;
}
.ui.blue.active,labels .label,
.ui.blue.active.label {
  background-color: var(--tag-blue-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-blue-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-blue-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.blue.labels .label:hover,
a.ui.blue.label:hover {
  background-color: var(--label-blue-hover-background-color, @blueHover) !important;
  border-color: var(--label-blue-hover-border-color, @blueHover) !important;
  color: var(--label-blue-hover-text-color, @blueHoverTextColor) !important;
}

/* Corner */
.ui.blue.corner.label,
.ui.blue.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.blue.ribbon.label {
  border-color: var(--label-blue-ribbon-shadow, @blueRibbonShadow) !important;
}

/* Basic */
.ui.basic.blue.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-blue-color, @blue) !important;
  border-color: var(--tag-blue-border-color, @blue) !important;
}

.ui.basic.blue.labels a.label:hover,
a.ui.basic.blue.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-blue-hover-color, @blueHover) !important;
  border-color: var(--label-blue-hover-border-color, @blueHover) !important;
}

/*--- Violet ---*/
.ui.violet.labels .label,
.ui.violet.label {
  --label-border-color: var(--tag-violet-border-color);
  background-color: var(--tag-violet-background-color, @violet) !important;
  border-color: var(--tag-violet-border-color, @violet) !important;
  color: var(--tag-violet-text-color, @violetTextColor) !important;
}
.ui.violet.active,labels .label,
.ui.violet.active.label {
  background-color: var(--tag-violet-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-violet-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-violet-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.violet.labels .label:hover,
a.ui.violet.label:hover {
  background-color: var(--label-violet-hover-background-color, @violetHover) !important;
  border-color: var(--label-violet-hover-border-color, @violetHover) !important;
  color: var(--label-violet-hover-text-color, @violetHoverTextColor) !important;
}

/* Corner */
.ui.violet.corner.label,
.ui.violet.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.violet.ribbon.label {
  border-color: var(--label-violet-ribbon-shadow, @violetRibbonShadow) !important;
}

/* Basic */
.ui.basic.violet.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-violet-color, @violet) !important;
  border-color: var(--tag-violet-border-color, @violet) !important;
}

.ui.basic.violet.labels a.label:hover,
a.ui.basic.violet.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-violet-hover-color, @violetHover) !important;
  border-color: var(--label-violet-hover-border-color, @violetHover) !important;
}

/*--- Purple ---*/
.ui.purple.labels .label,
.ui.purple.label {
  --label-border-color: var(--tag-purple-border-color);
  background-color: var(--tag-purple-background-color, @purple) !important;
  border-color: var(--tag-purple-border-color, @purple) !important;
  color: var(--tag-purple-text-color, @purpleTextColor) !important;
}
.ui.purple.active,labels .label,
.ui.purple.active.label {
  background-color: var(--tag-purple-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-purple-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-purple-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.purple.labels .label:hover,
a.ui.purple.label:hover {
  background-color: var(--label-purple-hover-background-color, @purpleHover) !important;
  border-color: var(--label-purple-hover-border-color, @purpleHover) !important;
  color: var(--label-purple-hover-text-color, @purpleHoverTextColor) !important;
}

/* Corner */
.ui.purple.corner.label,
.ui.purple.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.purple.ribbon.label {
  border-color: var(--label-purple-ribbon-shadow, @purpleRibbonShadow) !important;
}

/* Basic */
.ui.basic.purple.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-purple-color, @purple) !important;
  border-color: var(--tag-purple-border-color, @purple) !important;
}

.ui.basic.purple.labels a.label:hover,
a.ui.basic.purple.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-purple-hover-color, @purpleHover) !important;
  border-color: var(--label-purple-hover-border-color, @purpleHover) !important;
}

/*--- Pink ---*/
.ui.pink.labels .label,
.ui.pink.label {
  --label-border-color: var(--tag-pink-border-color);
  background-color: var(--tag-pink-background-color, @pink) !important;
  border-color: var(--tag-pink-border-color, @pink) !important;
  color: var(--tag-pink-text-color, @pinkTextColor) !important;
}
.ui.pink.active,labels .label,
.ui.pink.active.label {
  background-color: var(--tag-pink-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-pink-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-pink-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.pink.labels .label:hover,
a.ui.pink.label:hover {
  background-color: var(--label-pink-hover-background-color, @pinkHover) !important;
  border-color: var(--label-pink-hover-border-color, @pinkHover) !important;
  color: var(--label-pink-hover-text-color, @pinkHoverTextColor) !important;
}

/* Corner */
.ui.pink.corner.label,
.ui.pink.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.pink.ribbon.label {
  border-color: var(--label-pink-ribbon-shadow, @pinkRibbonShadow) !important;
}

/* Basic */
.ui.basic.pink.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-pink-color, @pink) !important;
  border-color: var(--tag-pink-border-color, @pink) !important;
}

.ui.basic.pink.labels a.label:hover,
a.ui.basic.pink.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-pink-hover-color, @pinkHover) !important;
  border-color: var(--label-pink-hover-border-color, @pinkHover) !important;
}

/*--- Brown ---*/
.ui.brown.labels .label,
.ui.brown.label {
  --label-border-color: var(--tag-brown-border-color);
  background-color: var(--tag-brown-background-color, @brown) !important;
  border-color: var(--tag-brown-border-color, @brown) !important;
  color: var(--tag-brown-text-color, @brownTextColor) !important;
}
.ui.brown.active,labels .label,
.ui.brown.active.label {
  background-color: var(--tag-brown-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-brown-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-brown-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.brown.labels .label:hover,
a.ui.brown.label:hover {
  background-color: var(--label-brown-hover-background-color, @brownHover) !important;
  border-color: var(--label-brown-hover-border-color, @brownHover) !important;
  color: var(--label-brown-hover-text-color, @brownHoverTextColor) !important;
}

/* Corner */
.ui.brown.corner.label,
.ui.brown.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.brown.ribbon.label {
  border-color: var(--label-brown-ribbon-shadow, @brownRibbonShadow) !important;
}

/* Basic */
.ui.basic.brown.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-brown-color, @brown) !important;
  border-color: var(--tag-brown-border-color, @brown) !important;
}

.ui.basic.brown.labels a.label:hover,
a.ui.basic.brown.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-brown-hover-color, @brownHover) !important;
  border-color: var(--label-brown-hover-border-color, @brownHover) !important;
}

/*--- Grey ---*/
.ui.grey.labels .label,
.ui.grey.label {
  --label-border-color: var(--tag-grey-border-color);
  background-color: var(--tag-grey-background-color, @grey) !important;
  border-color: var(--tag-grey-border-color, @grey) !important;
  color: var(--tag-grey-text-color, @greyTextColor) !important;
}
.ui.grey.active,labels .label,
.ui.grey.active.label {
  background-color: var(--tag-grey-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-grey-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-grey-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.grey.labels .label:hover,
a.ui.grey.label:hover {
  background-color: var(--label-grey-hover-background-color, @greyHover) !important;
  border-color: var(--label-grey-hover-border-color, @greyHover) !important;
  color: var(--label-grey-hover-text-color, @greyHoverTextColor) !important;
}

/* Corner */
.ui.grey.corner.label,
.ui.grey.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.grey.ribbon.label {
  border-color: var(--label-brown-ribbon-shadow, @brownRibbonShadow) !important;
}

/* Basic */
.ui.basic.grey.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-grey-color, @grey) !important;
  border-color: var(--tag-grey-border-color, @grey) !important;
}

.ui.basic.grey.labels a.label:hover,
a.ui.basic.grey.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-grey-hover-color, @greyHover) !important;
  border-color: var(--label-grey-hover-border-color, @greyHover) !important;
}

/*--- Black ---*/
.ui.black.labels .label,
.ui.black.label {
  --label-border-color: var(--tag-black-border-color);
  background-color: var(--tag-black-background-color, @black) !important;
  border-color: var(--tag-black-border-color, @black) !important;
  color: var(--tag-black-text-color, @blackTextColor) !important;
}
.ui.orange.active,labels .label,
.ui.orange.active.label {
  background-color: var(--tag-orange-active-background-color, @labelActiveBackgroundColor);
  border-color: var(--tag-orange-active-border-color, @labelActiveBackgroundColor);
  color: var(--tag-orange-active-text-color, @labelActiveTextColor);
}

/* Link */
.ui.black.labels .label:hover,
a.ui.black.label:hover {
  background-color: var(--label-black-hover-background-color, @blackHover) !important;
  border-color: var(--label-black-hover-border-color, @blackHover) !important;
  color: var(--label-black-hover-text-color, @blackHoverTextColor) !important;
}

/* Corner */
.ui.black.corner.label,
.ui.black.corner.label:hover {
  background-color: transparent !important;
}

/* Ribbon */
.ui.black.ribbon.label {
  border-color: var(--label-brown-ribbon-shadow, @brownRibbonShadow) !important;
}

/* Basic */
.ui.basic.black.label {
  background: var(--label-basic-background, @basicBackground) !important;
  color: var(--tag-black-color, @black) !important;
  border-color: var(--tag-black-border-color, @black) !important;
}

.ui.basic.black.labels a.label:hover,
a.ui.basic.black.label:hover {
  background-color: var(--label-basic-hover-background, @white) !important;
  color: var(--label-black-hover-color, @blackHover) !important;
  border-color: var(--label-black-hover-border-color, @blackHover) !important;
}

/*-------------------
        Basic
--------------------*/

.ui.basic.label {
  background: var(--label-basic-background, @basicBackground);
  border: var(--label-basic-border, @basicBorder);
  color: var(--label-basic-text-color, @basicColor);
  box-shadow: var(--label-basic-box-shadow, @basicBoxShadow);
}

/* Link */
a.ui.basic.label:hover {
  text-decoration: none;
  background: var(--label-basic-hover-background, @basicHoverBackground);
  color: var(--label-basic-hover-color, @basicHoverColor);
  border: var(--label-basic-hover-border, @basicHoverBorder);
  box-shadow: var(--label-basic-hover-box-shadow, @basicHoverBoxShadow);
}

/* Pointing */
.ui.basic.pointing.label:before {
  border-color: inherit;
}


/*-------------------
       Fluid
--------------------*/

.ui.label.fluid,
.ui.fluid.labels>.label {
  width: 100%;
  box-sizing: border-box;
}

/*-------------------
       Inverted
--------------------*/

.ui.inverted.labels .label,
.ui.inverted.label {
  color: @invertedTextColor !important;
}

/*-------------------
     Horizontal
--------------------*/

.ui.horizontal.labels .label,
.ui.horizontal.label {
  margin: 0em @horizontalLabelMargin 0em 0em;

  padding: @horizontalLabelVerticalPadding @horizontalPadding;
  min-width: @horizontalLabelMinWidth;
  text-align: center;
}


/*-------------------
       Circular
--------------------*/

.ui.circular.labels .label,
.ui.circular.label {
  min-width: @circularMinSize;
  min-height: @circularMinSize;

  padding: @circularPadding !important;

  line-height: 1em;
  text-align: center;
  border-radius: @circularRadius;
}

.ui.empty.circular.labels .label,
.ui.empty.circular.label {
  min-width: 0em;
  min-height: 0em;
  overflow: hidden;
  width: @emptyCircleSize;
  height: @emptyCircleSize;
  vertical-align: baseline;
  border-width: @borderWidth;
  background-color: var(--tag-default-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-default-circular-border-color, var(--label-border-color)) !important;
}

.ui.empty.circular.red.label {
  background-color: var(--tag-red-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-red-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.orange.label {
  background-color: var(--tag-orange-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-orange-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.yellow.label {
  background-color: var(--tag-yellow-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-yellow-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.olive.label {
  background-color: var(--tag-olive-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-olive-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.green.label {
  background-color: var(--tag-green-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-green-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.teal.label {
  background-color: var(--tag-teal-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-teal-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.blue.label {
  background-color: var(--tag-blue-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-blue-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.violet.label {
  background-color: var(--tag-violet-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-violet-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.purple.label {
  background-color: var(--tag-purple-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-purple-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.pink.label {
  background-color: var(--tag-pink-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-pink-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.brown.label {
  background-color: var(--tag-brown-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-brown-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.grey.label {
  background-color: var(--tag-grey-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-grey-circular-border-color, var(--label-border-color)) !important;
}
.ui.empty.circular.black.label {
  background-color: var(--tag-black-circular-background-color, var(--label-text-color)) !important;
  border-color: var(--tag-black-circular-border-color, var(--label-border-color)) !important;
}

/*-------------------
       Pointing
--------------------*/

.ui.pointing.label {
  position: relative;
}

.ui.attached.pointing.label {
  position: absolute;
}

.ui.pointing.label:before {
  background-color: inherit;
  background-image: inherit;
  border-width: none;
  border-style: solid;
  border-color: @pointingBorderColor;
}

/* Arrow */
.ui.pointing.label:before {
  position: absolute;
  content: '';
  transform: rotate(45deg);
  background-image: none;

  z-index: @pointingTriangleZIndex;
  width: @pointingTriangleSize;
  height: @pointingTriangleSize;
  transition: @pointingTriangleTransition;
}

/*--- Above ---*/
.ui.pointing.label,
.ui[class*="pointing above"].label {
  margin-top: @pointingVerticalDistance;
}

.ui.pointing.label:before,
.ui[class*="pointing above"].label:before {
  border-width: @borderWidth 0px 0px @borderWidth;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 0%;
  left: 50%;
}

/*--- Below ---*/
.ui[class*="bottom pointing"].label,
.ui[class*="pointing below"].label {
  margin-top: 0em;
  margin-bottom: @pointingVerticalDistance;
}

.ui[class*="bottom pointing"].label:before,
.ui[class*="pointing below"].label:before {
  border-width: 0px @borderWidth @borderWidth 0px;
  top: auto;
  right: auto;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  top: 100%;
  left: 50%;
}

/*--- Left ---*/
.ui[class*="left pointing"].label {
  margin-top: 0em;
  margin-left: @pointingHorizontalDistance;
}

.ui[class*="left pointing"].label:before {
  border-width: 0px 0px @borderWidth @borderWidth;
  transform: translateX(-50%) translateY(-50%) rotate(45deg);
  bottom: auto;
  right: auto;
  top: 50%;
  left: 0em;
}

/*--- Right ---*/
.ui[class*="right pointing"].label {
  margin-top: 0em;
  margin-right: @pointingHorizontalDistance;
}

.ui[class*="right pointing"].label:before {
  border-width: @borderWidth @borderWidth 0px 0px;
  transform: translateX(50%) translateY(-50%) rotate(45deg);
  top: 50%;
  right: 0%;
  bottom: auto;
  left: auto;
}

/* Basic Pointing */

/*--- Above ---*/
.ui.basic.pointing.label:before,
.ui.basic[class*="pointing above"].label:before {
  margin-top: @basicPointingTriangleOffset;
}

/*--- Below ---*/
.ui.basic[class*="bottom pointing"].label:before,
.ui.basic[class*="pointing below"].label:before {
  bottom: auto;
  top: 100%;
  margin-top: -@basicPointingTriangleOffset;
}

/*--- Left ---*/
.ui.basic[class*="left pointing"].label:before {
  top: 50%;
  left: @basicPointingTriangleOffset;
}

/*--- Right ---*/
.ui.basic[class*="right pointing"].label:before {
  top: 50%;
  right: @basicPointingTriangleOffset;
}


/*------------------
   Floating Label
-------------------*/

.ui.floating.label {
  position: absolute;
  z-index: @floatingZIndex;
  top: @floatingTopOffset;
  left: 100%;
  margin: 0em 0em 0em @floatingLeftOffset !important;
}

/*-------------------
        Sizes
--------------------*/

.ui.mini.labels .label,
.ui.mini.label {
  font-size: @mini;
}

.ui.tiny.labels .label,
.ui.tiny.label {
  font-size: @tiny;
}

.ui.small.labels .label,
.ui.small.label {
  font-size: @small;
}

.ui.labels .label,
.ui.label {
  font-size: @medium;
}

.ui.large.labels .label,
.ui.large.label {
  font-size: @large;
}

.ui.big.labels .label,
.ui.big.label {
  font-size: @big;
}

.ui.huge.labels .label,
.ui.huge.label {
  font-size: @huge;
}

.ui.massive.labels .label,
.ui.massive.label {
  font-size: @massive;
}

.loadUIOverrides();
